const { sequelize, Skill, SkillComment, SkillLike } = require("../models");

async function addLibraryFeatures() {
  try {
    console.log("üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏...");

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ is_public –≤ —Ç–∞–±–ª–∏—Ü—É skills –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    const skillTableInfo = await sequelize
      .getQueryInterface()
      .describeTable("skills");

    if (!skillTableInfo.is_public) {
      await sequelize.getQueryInterface().addColumn("skills", "is_public", {
        type: sequelize.Sequelize.BOOLEAN,
        defaultValue: false,
        allowNull: false,
      });
      console.log("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ is_public –≤ —Ç–∞–±–ª–∏—Ü—É skills");
    }

    if (!skillTableInfo.created_at) {
      await sequelize.getQueryInterface().addColumn("skills", "created_at", {
        type: sequelize.Sequelize.DATE,
        defaultValue: sequelize.Sequelize.NOW,
      });
      console.log("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ created_at –≤ —Ç–∞–±–ª–∏—Ü—É skills");
    }

    if (!skillTableInfo.updated_at) {
      await sequelize.getQueryInterface().addColumn("skills", "updated_at", {
        type: sequelize.Sequelize.DATE,
        defaultValue: sequelize.Sequelize.NOW,
      });
      console.log("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ updated_at –≤ —Ç–∞–±–ª–∏—Ü—É skills");
    }

    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ –ª–∞–π–∫–æ–≤
    await SkillComment.sync({ force: false });
    console.log("‚úÖ –¢–∞–±–ª–∏—Ü–∞ skill_comments —Å–æ–∑–¥–∞–Ω–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∞");

    await SkillLike.sync({ force: false });
    console.log("‚úÖ –¢–∞–±–ª–∏—Ü–∞ skill_likes —Å–æ–∑–¥–∞–Ω–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∞");

    console.log("üéâ –§—É–Ω–∫—Ü–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:", error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏
if (require.main === module) {
  addLibraryFeatures()
    .then(() => {
      console.log("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
      process.exit(0);
    })
    .catch((error) => {
      console.error("‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:", error);
      process.exit(1);
    });
}

module.exports = addLibraryFeatures;
