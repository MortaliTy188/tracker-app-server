const { User } = require("../models");

/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—è
 */
async function addPrivacyField() {
  console.log("üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—è...");

  try {
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ isPrivate –≤ —Ç–∞–±–ª–∏—Ü—É users
    await User.sequelize.query(`
      ALTER TABLE users 
      ADD COLUMN IF NOT EXISTS "isPrivate" BOOLEAN DEFAULT false NOT NULL;
    `);

    console.log("‚úÖ –ü–æ–ª–µ isPrivate —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É users");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const [results] = await User.sequelize.query(`
      SELECT column_name, data_type, column_default 
      FROM information_schema.columns 
      WHERE table_name = 'users' AND column_name = 'isPrivate';
    `);

    if (results.length > 0) {
      console.log("üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª–µ:", results[0]);
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏:", error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
addPrivacyField()
  .then(() => {
    console.log("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
    process.exit(0);
  })
  .catch((error) => {
    console.error("\n‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:", error);
    process.exit(1);
  });
