/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –∞–≤–∞—Ç–∞—Ä–æ–≤
 *
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node setup/cleanupAvatars.js --dry-run  # –ü—Ä–æ—Å–º–æ—Ç—Ä –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è
 * node setup/cleanupAvatars.js --clean    # –†–µ–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
 * node setup/cleanupAvatars.js --stats    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
 */

const AvatarCleaner = require("../utils/avatarCleaner");

async function main() {
  const args = process.argv.slice(2);
  const cleaner = new AvatarCleaner();

  console.log("üßπ –£—Ç–∏–ª–∏—Ç–∞ –æ—á–∏—Å—Ç–∫–∏ –∞–≤–∞—Ç–∞—Ä–æ–≤");
  console.log("=====================================");

  try {
    if (args.includes("--stats")) {
      console.log("üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...");
      const stats = await cleaner.getAvatarStats();

      console.log(`\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≤–∞—Ç–∞—Ä–æ–≤:`);
      console.log(`   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${stats.totalFiles}`);
      console.log(`   –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö: ${stats.usedFiles}`);
      console.log(`   –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö: ${stats.unusedFiles}`);
      console.log(`   –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ${stats.totalSize}`);
      console.log(`   –†–∞–∑–º–µ—Ä –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö: ${stats.unusedSize}`);

      if (stats.unusedFiles > 0) {
        console.log(`\nüóëÔ∏è –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ–∞–π–ª—ã:`);
        stats.unusedFilesList.forEach((file) => console.log(`   - ${file}`));
      }
    } else if (args.includes("--clean")) {
      console.log("üßΩ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏...");
      const results = await cleaner.cleanupUnusedAvatars(false);

      console.log(`\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:`);
      console.log(`   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${results.totalFiles}`);
      console.log(`   –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö: ${results.usedFiles}`);
      console.log(`   –£–¥–∞–ª–µ–Ω–æ: ${results.deletedFiles.length}`);

      if (results.errors.length > 0) {
        console.log(`   –û—à–∏–±–æ–∫: ${results.errors.length}`);
        results.errors.forEach((err) =>
          console.log(`   ‚ùå ${err.file}: ${err.error}`)
        );
      }
    } else {
      // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - dry run
      console.log("üëÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ (–±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤)...");
      const results = await cleaner.cleanupUnusedAvatars(true);

      console.log(`\nüîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:`);
      console.log(`   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${results.totalFiles}`);
      console.log(`   –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö: ${results.usedFiles}`);
      console.log(`   –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö: ${results.unusedFiles}`);

      if (results.unusedFiles > 0) {
        console.log(
          `\nüí° –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: node setup/cleanupAvatars.js --clean`
        );
      }
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:", error);
    process.exit(1);
  }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
if (process.argv.includes("--help") || process.argv.includes("-h")) {
  console.log(`
üßπ –£—Ç–∏–ª–∏—Ç–∞ –æ—á–∏—Å—Ç–∫–∏ –∞–≤–∞—Ç–∞—Ä–æ–≤

–ö–æ–º–∞–Ω–¥—ã:
  node setup/cleanupAvatars.js               # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è
  node setup/cleanupAvatars.js --dry-run     # –¢–æ –∂–µ —Å–∞–º–æ–µ
  node setup/cleanupAvatars.js --clean       # –†–µ–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
  node setup/cleanupAvatars.js --stats       # –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  node setup/cleanupAvatars.js --help        # –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

–ü—Ä–∏–º–µ—Ä—ã:
  # –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ
  node setup/cleanupAvatars.js
  
  # –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  node setup/cleanupAvatars.js --stats
  
  # –í—ã–ø–æ–ª–Ω–∏—Ç—å –æ—á–∏—Å—Ç–∫—É
  node setup/cleanupAvatars.js --clean
`);
  process.exit(0);
}

main();
