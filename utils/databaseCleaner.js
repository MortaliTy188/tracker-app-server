const { sequelize } = require("../models");

/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */
class DatabaseCleaner {
  /**
   * –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
   */
  static async clearAllTables() {
    try {
      console.log("üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...");

      // –û—á–∏—â–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–∏–∑-–∑–∞ FK constraints)
      await sequelize.query('DELETE FROM "user_achievements"', {
        type: sequelize.QueryTypes.DELETE,
      });
      await sequelize.query('DELETE FROM "Note"', {
        type: sequelize.QueryTypes.DELETE,
      });
      await sequelize.query('DELETE FROM "topics"', {
        type: sequelize.QueryTypes.DELETE,
      });
      await sequelize.query('DELETE FROM "skills"', {
        type: sequelize.QueryTypes.DELETE,
      });
      await sequelize.query('DELETE FROM "users"', {
        type: sequelize.QueryTypes.DELETE,
      });
      await sequelize.query('DELETE FROM "skill_category"', {
        type: sequelize.QueryTypes.DELETE,
      });
      await sequelize.query('DELETE FROM "topic_status"', {
        type: sequelize.QueryTypes.DELETE,
      });
      await sequelize.query('DELETE FROM "Feedback"', {
        type: sequelize.QueryTypes.DELETE,
      });
      await sequelize.query('DELETE FROM "achievements"', {
        type: sequelize.QueryTypes.DELETE,
      });

      console.log("‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –æ—á–∏—â–µ–Ω—ã");
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error.message);
      throw error;
    }
  }

  /**
   * –°–±—Ä–æ—Å –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è PostgreSQL
   */
  static async resetSequences() {
    try {
      console.log("üîÑ –°–±—Ä–æ—Å –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–æ–≤...");

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç—ã –¥–ª—è PostgreSQL
      await sequelize.query("ALTER SEQUENCE users_id_seq RESTART WITH 1", {
        type: sequelize.QueryTypes.RAW,
      });
      await sequelize.query("ALTER SEQUENCE skills_id_seq RESTART WITH 1", {
        type: sequelize.QueryTypes.RAW,
      });
      await sequelize.query(
        "ALTER SEQUENCE skill_category_id_seq RESTART WITH 1",
        { type: sequelize.QueryTypes.RAW }
      );
      await sequelize.query("ALTER SEQUENCE topics_id_seq RESTART WITH 1", {
        type: sequelize.QueryTypes.RAW,
      });
      await sequelize.query(
        "ALTER SEQUENCE topic_status_id_seq RESTART WITH 1",
        { type: sequelize.QueryTypes.RAW }
      );
      await sequelize.query('ALTER SEQUENCE "Note_id_seq" RESTART WITH 1', {
        type: sequelize.QueryTypes.RAW,
      });
      await sequelize.query('ALTER SEQUENCE "Feedback_id_seq" RESTART WITH 1', {
        type: sequelize.QueryTypes.RAW,
      });
      await sequelize.query(
        'ALTER SEQUENCE "achievements_id_seq" RESTART WITH 1',
        {
          type: sequelize.QueryTypes.RAW,
        }
      );
      await sequelize.query(
        'ALTER SEQUENCE "user_achievements_id_seq" RESTART WITH 1',
        {
          type: sequelize.QueryTypes.RAW,
        }
      );

      console.log("‚úÖ –ê–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç—ã —Å–±—Ä–æ—à–µ–Ω—ã");
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–æ–≤:", error.message);
      // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ
    }
  }

  /**
   * –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å —Å–±—Ä–æ—Å–æ–º –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–æ–≤
   */
  static async fullClean() {
    await this.clearAllTables();
    await this.resetSequences();
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏
   */
  static async clearAchievementData() {
    try {
      console.log("üèÜ –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...");

      await sequelize.query('DELETE FROM "user_achievements"', {
        type: sequelize.QueryTypes.DELETE,
      });
      await sequelize.query('DELETE FROM "achievements"', {
        type: sequelize.QueryTypes.DELETE,
      });

      // –°–±—Ä–æ—Å –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–∞–±–ª–∏—Ü –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
      await sequelize.query(
        'ALTER SEQUENCE "achievements_id_seq" RESTART WITH 1',
        {
          type: sequelize.QueryTypes.RAW,
        }
      );
      await sequelize.query(
        'ALTER SEQUENCE "user_achievements_id_seq" RESTART WITH 1',
        {
          type: sequelize.QueryTypes.RAW,
        }
      );

      console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –æ—á–∏—â–µ–Ω—ã");
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:", error.message);
      throw error;
    }
  }
}

module.exports = DatabaseCleaner;
